{"version":3,"sources":["assets/images/User_default.png","api/api.js","redux/dialogsReducer.js","components/Navbar/Navbar.module.css","components/Users/Users.module.css","assets/images/Cube-1s-200px.svg","components/common/FormsControls/FormsControls.js","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","redux/utils/objectsHelpers.js","redux/usersReducer.js","components/common/Paginator/Paginator.js","components/Users/User.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersConteiners.js","components/Header/Header.jsx","redux/authReducer.js","components/Header/HeaderConteiner.js","components/Login/Login.jsx","redux/appReducer.js","redux/sateBarReducer.js","redux/reduxStore.js","hoc/withSuspense.js","App.js","index.js","components/common/Preloarder/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","redux/utils/validators/validators.js","components/Header/Header.module.css","redux/profileReducer.js"],"names":["module","exports","instance","axios","baseURL","withCredentials","headers","userAPI","getUser","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","filePhoto","formData","FormData","append","saveProfile","profile","log","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","initialState","dialogs","id","name","messages","message","addMessage","newMessageText","type","dialogsReducer","state","action","newMessage","FormsControl","input","meta","touched","error","children","hasError","className","styles","formControl","Texterea","props","restProps","child","Input","creatField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","Navbar","classes","navbar","item","to","activeClassName","active","News","Music","Settings","updateObjaecInArray","items","itemId","objPropName","newObjProps","map","user","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowing","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","async","resultCode","usersReducer","followed","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","React","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","style","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","src","photos","small","userPhoto","alt","disabled","some","Users","getUsersState","createSelector","usersPage","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIComponent","page","getUsers","this","Component","compose","connect","bind","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","GET_CAPTCHA_URL","capthaUrl","setUserData","payload","getUserData","url","captchaUrl","authReducer","HeaderConteiner","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","formSymmaryError","length","stopSubmit","_error","initialized","appReducer","sateBarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sateBar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Suspense","fallback","DialogsConteiner","lazy","ProfileConteiners","App","catchAllUnhandledErrors","promiseRejectionEvent","alert","initializeApp","addEventListener","removeEventListener","exact","path","render","UsersConteiners","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Preloarder","preloarder","value","maxLenghtCreator","maxlenght","posts","likecount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","reject","newPost","n","postId"],"mappings":"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","file":"static/js/main.84e1c057.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/User_default.81834b04.png\";","import * as axios from 'axios';\n//import { savePhoto } from '../redux/profileReducer';\n\n\n\nconst instance = axios.create(\n    {\n        baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n        withCredentials: true,\n        headers: {\n            'API-KEY': '3e67af7d-111f-4303-88b4-a9cc5b13a435'\n        }\n\n    }\n)\n\nexport const userAPI = {\n    getUser(currentPage = 1, pageSize = 10) {\n\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId) {\n        console.warn('Obsolete method, Please profile object')\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n\n    getProfile(userId) {\n        return instance.get(`profile/${userId}`)\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/${userId}`)\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status })\n    },\n    savePhoto(filePhoto) {\n        const formData = new FormData();\n        formData.append(\"image\", filePhoto);\n        return instance.put(`profile/photo`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n    saveProfile(profile) {\n        console.log(\"esss\");\n        debugger;\n        return instance.put(`profile`, profile)\n    }\n}\n\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n    },\n    login(email, password, rememberMe = false, captcha = null) {\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`)\n    }\n}\n\n\n","const ADD_MESSAGE = 'ADD-MESSAGE';\n\nlet initialState = {\n\n    dialogs: [\n        { id: 1, name: 'Dimych' },\n        { id: 2, name: 'Andrew' },\n        { id: 3, name: 'Sveta' },\n        { id: 4, name: 'Valera' },\n        { id: 5, name: 'Sasha' }\n    ],\n\n    messages: [\n        { id: 1, message: 'Hi' },\n        { id: 2, message: 'How are you?' },\n        { id: 3, message: 'Yo' }\n    ],\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_MESSAGE: {\n            let newMessage = {\n                id: 4,\n                message: action.newMessageText\n            }\n            return {\n                ...state,\n                messages: [...state.messages, newMessage]\n            };\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport const addMessage = (newMessageText) => {\n    return { type: ADD_MESSAGE, newMessageText }\n}\n\n\n\nexport default dialogsReducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__CLYHD\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__17MJB\"};","module.exports = __webpack_public_path__ + \"static/media/Cube-1s-200px.3b493ed5.svg\";","import React from 'react';\nimport { Field } from 'redux-form';\nimport styles from './FormsControls.module.css'\n\n\nconst FormsControl = ({ input, meta: { touched, error }, children }) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\n            <div>\n                {children}\n            </div>\n            {hasError && < span > {error}</span>}\n        </div >\n    )\n}\n\n\n\nexport const Texterea = (props) => {\n    const { input, meta, child, ...restProps } = props;\n    return <FormsControl {...props}><textarea {...input} {...restProps} /></FormsControl>\n}\n\nexport const Input = (props) => {\n    const { input, meta, child, ...restProps } = props;\n    return <FormsControl {...props}><input {...input} {...restProps} /></FormsControl>\n}\n\nexport const creatField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder} name={name} component={component}\n            validate={validators} {...props} />{text}\n    </div>)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport classes from './Navbar.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = () => {\n    return (\n        <nav className={classes.navbar}>\n            <div className={classes.item}>\n                <NavLink to='/profile' activeClassName={classes.active}>Profile</NavLink>\n            </div>\n            <div className={`${classes.item} ${classes.active}`}>\n                <NavLink to='/dialogs' activeClassName={classes.active}>Messages</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/users' activeClassName={classes.active}>Users</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/news' activeClassName={classes.active}>News</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/music' activeClassName={classes.active}>Music</NavLink>\n            </div>\n            <div className={classes.item}>\n                <NavLink to='/settings' activeClassName={classes.active}>Settings</NavLink>\n            </div>\n\n        </nav>\n    )\n}\n\nexport default Navbar;\n","import React from 'react';\n//import classes from './News.module.css';\n\n\nconst News = (props) => {\n    return (\n        <div>\n            News\n        </div>\n    )\n}\n\nexport default News;\n","import React from 'react';\n//import classes from './Music.module.css';\n\n\nconst Music = (props) => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}\n\nexport default Music;\n","import React from 'react';\n//import classes from './Settings.module.css';\n\n\nconst Settings = (props) => {\n    return (\n        <div>\n            Settings\n        </div>\n    )\n}\n\nexport default Settings;\n","\nexport const updateObjaecInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(user => {\n        if (user[objPropName] === itemId) {\n            return { ...user, ...newObjProps }\n        }\n        return user;\n    })\n}","import { userAPI } from \"../api/api\";\nimport { updateObjaecInArray } from \"./utils/objectsHelpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_IS_FOLLOWING = 'TOGGLE-IS-FFOLLOWING';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n}\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case FOLLOW: {\n            return {\n                ...state,\n                users: updateObjaecInArray(state.users, action.userId, \"id\", { followed: true })\n            }\n        }\n        case UNFOLLOW: {\n            return {\n                ...state,\n                users: updateObjaecInArray(state.users, action.userId, \"id\", { followed: false })\n            }\n        }\n        case SET_USERS: {\n            return {\n                ...state,\n                users: [...action.users]\n            }\n        }\n        case SET_CURRENT_PAGE: {\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        }\n\n        case SET_TOTAL_USERS_COUNT: {\n            return {\n                ...state,\n                totalUsersCount: action.totalUsersCount\n            }\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n        case TOGGLE_IS_FOLLOWING: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id !== action.userId)\n            }\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport const followSuccess = (userId) => { return { type: FOLLOW, userId } }\nexport const unfollowSuccess = (userId) => { return { type: UNFOLLOW, userId } }\nexport const setUsers = (users) => { return { type: SET_USERS, users } }\nexport const setCurrentPage = (currentPage) => { return { type: SET_CURRENT_PAGE, currentPage } }\nexport const setTonalUsersCount = (totalCount) => { return { type: SET_TOTAL_USERS_COUNT, totalUsersCount: totalCount } }\nexport const toggleIsFetching = (isFetching) => { return { type: TOGGLE_IS_FETCHING, isFetching } }\nexport const toggleIsFollowing = (isFetching, userId) => { return { type: TOGGLE_IS_FOLLOWING, isFetching, userId } }\n\nexport const getUsers = (page, pageSize) => {\n\n    return async (dispatch) => {\n\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        const data = await userAPI.getUser(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTonalUsersCount(data.totalCount))\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n\n    dispatch(toggleIsFollowing(true, userId));\n    const response = await apiMethod(userId);\n\n    if (response.data.resultCode === 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleIsFollowing(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, userAPI.follow.bind(userId), followSuccess);\n    }\n}\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, userAPI.unfollow.bind(userId), unfollowSuccess);\n    }\n}\n\n\nexport default usersReducer;\n","import React from 'react';\nimport style from './Paginator.module.css';\nimport cn from 'classnames';\n\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 20 }) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = React.useState(1);\n\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n\n    return <div className={style.paginator}>\n        {portionNumber > 1 && <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\n        {pages\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n            .map(p => {\n                return (< span className={cn({\n                    [style.selectedPage]: currentPage === p\n                }, style.pageNumber)}\n                    key={p}\n\n                    onClick={(e) => { onPageChanged(p) }}>{p}</span>)\n            })}\n        {portionCount > portionNumber && <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\n    </div >\n}\n\nexport default Paginator;","import React from 'react';\nimport style from './Users.module.css';\nimport userPhoto from '../../assets/images/User_default.png';\nimport { NavLink } from 'react-router-dom';\n\nlet User = ({ user, followingInProgress, follow, unfollow }) => {\n\n    return (\n        <div >\n            <span>\n                <div>\n                    <NavLink to={'/profile/' + user.id} >\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={style.userPhoto} alt='' />\n                    </NavLink>\n                </div>\n                <div>\n                    {user.followed ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n                        unfollow(user.id)\n                    }}>unfollow</button>\n\n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n                            follow(user.id)\n                        }} >follow</button>}\n                </div>\n            </span>\n            <span>\n                <span>\n                    <div>\n                        {user.name}\n                    </div>\n                    <div>\n                        {user.status}\n                    </div>\n                </span>\n                <span>\n                    <div>\n                        {'user.location.city'}\n                    </div>\n                    <div>\n                        {'user.location.country'}\n                    </div>\n                </span>\n            </span>\n        </div>)\n}\n\nexport default User;\n","import React from 'react';\nimport Paginator from '../common/Paginator/Paginator';\nimport User from './User';\n\nlet Users = ({ totalUsersCount, pageSize, currentPage, onPageChanged, users, ...props }) => {\n\n    return (\n        <div>\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                totalItemsCount={totalUsersCount} pageSize={pageSize} />\n            <div>\n                {\n                    users.map(user => <User user={user}\n                        followingInProgress={props.followingInProgress}\n                        follow={props.follow}\n                        unfollow={props.unfollow}\n                        key={user.id} />)\n                }\n            </div>\n        </div >\n    )\n}\n\nexport default Users;\n","import { createSelector } from 'reselect';\n\nexport const getUsersStateSelector = (state) => {\n    return state.usersPage.users;\n}\nexport const getUsersState = createSelector(getUsersStateSelector, (users) => {\n    return users.filter(u => true);\n}\n)\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n} \n","import React from 'react';\nimport {\n    follow, unfollow, setCurrentPage,\n    toggleIsFollowing,\n    getUsers\n} from '../../redux/usersReducer';\nimport { connect } from 'react-redux';\nimport Users from './Users';\nimport Preloarder from '../common/Preloarder/Preloader';\nimport { compose } from 'redux';\nimport {\n    getUsersState, getPageSize, getTotalUsersCount,\n    getCurrentPage, getIsFetching, getFollowingInProgress\n} from '../../redux/usersSelectors';\n\n\n\nclass UsersAPIComponent extends React.Component {\n\n    componentDidMount() {\n        const { currentPage, pageSize } = this.props;\n        this.props.getUsers(currentPage, pageSize);\n\n    }\n\n    onPageChanged = (page) => {\n        const { pageSize } = this.props;\n        this.props.getUsers(page, pageSize);\n\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloarder /> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                pageSize={this.props.pageSize}\n                onPageChanged={this.onPageChanged}\n                currentPage={this.props.currentPage}\n                users={this.props.users}\n                unfollow={this.props.unfollow}\n                follow={this.props.follow}\n                followingInProgress={this.props.followingInProgress}\n\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsersState(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps,\n        { follow, unfollow, toggleIsFollowing, setCurrentPage, getUsers: getUsers })\n)(UsersAPIComponent);\n","import React from 'react';\nimport classes from './Header.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n\n    return (\n        <header className={classes.header}>\n            <img src='https://png.pngtree.com/png-clipart/20190924/original/pngtree-funny-yellow-bear-cartoon-character-png-image_4815036.jpg' alt='' />\n            <div className={classes.loginBlock} >\n                {props.isAuth\n                    ? <div>{props.login} <button onClick={props.logout}>Log out</button></div>\n                    : <NavLink to={'/login'} >Login</NavLink>}\n            </div>\n\n        </header>\n    )\n}\n\nexport default Header;\n","import { authAPI, securityAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET-USER-DATA';\nconst GET_CAPTCHA_URL = 'samurai-network/auth/GET_CAPTCHA_URL';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    capthaUrl: null\n}\n\nconst authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL:\n            return {\n                ...state,\n                ...action.payload,\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const setUserData = (userId, email, login, isAuth) => {\n\n    return { type: SET_USER_DATA, payload: { userId, email, login, isAuth } }\n};\n\nexport const getCaptchaUrlSuccess = (captchaUrl) => {\n\n    return { type: GET_CAPTCHA_URL, payload: { captchaUrl } }\n};\n\n\n\nexport const getUserData = () => async (dispatch) => {\n\n    let response = await authAPI.me();\n\n    if (response.data.resultCode === 0) {\n        let { id, email, login, } = response.data.data;\n        dispatch(setUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n\n    let response = await authAPI.login(email, password, rememberMe, captcha);\n\n    if (response.data.resultCode === 0) {\n        dispatch(getUserData())\n    } else {\n        if (response.data.resultCode === 10) {\n            dispatch(getCaptchaUrl());\n        }\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"some error\";\n        dispatch(stopSubmit(\"login\", { _error: message }));\n    }\n}\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n\n    let response = await securityAPI.getCaptchaUrl();\n    const capthaUrl = response.data.url;\n    dispatch(getCaptchaUrlSuccess(capthaUrl))\n}\n\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n\n    if (response.data.resultCode === 0) {\n        dispatch(setUserData(null, null, null, false));\n    }\n}\n\nexport default authReducer;\n","import React from 'react';\nimport Header from './Header';\nimport { connect } from 'react-redux';\nimport { logout } from '../../redux/authReducer';\n\nclass HeaderConteiner extends React.Component {\n\n    render() {\n        return <Header {...this.props} />\n    }\n}\n\nconst mapStateToProps = (state) => ({\n\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n}\n);\n\n\n\nexport default connect(mapStateToProps, { logout })(HeaderConteiner);\n","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { required } from '../../redux/utils/validators/validators';\nimport { Input, creatField } from '../common/FormsControls/FormsControls';\nimport { login } from '../../redux/authReducer';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport style from '../common/FormsControls/FormsControls.module.css';\n\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\n\n    return (\n        <form onSubmit={handleSubmit}>\n\n            {creatField(\"Email\", \"email\", [required], Input)}\n            {creatField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\n            {creatField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"remember me\")}\n            {captchaUrl && <img src={captchaUrl} alt=\"\" />}\n            {captchaUrl && creatField(\"Symbols form image\", \"captcha\", [], Input, {})}\n\n            {error && <div className={style.formSymmaryError}>\n                {error}\n            </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({\n    // a unique name for the form\n    form: 'login'\n})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'} />\n    }\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n\n    return {\n        captchaUrl: state.auth.captchaUrl,\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport default connect(mapStateToProps, { login })(Login);\n","//import { authAPI } from \"../api/api\";\n//import { stopSubmit } from \"redux-form\";\nimport { getUserData } from './authReducer';\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED-SUCCESS';\n\nlet initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case INITIALIZED_SUCCESS: {\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => {\n    return { type: INITIALIZED_SUCCESS }\n};\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getUserData());\n    Promise.all([promise]).then(() => {\n        dispatch(initializedSuccess());\n    })\n\n}\n\n\n\nexport default appReducer;\n","let initialState = {\n\n}\n\n\nconst sateBarReducer = (state = initialState, action) => {\n\n    return state;\n}\n\nexport default sateBarReducer;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport profileReducer from './profileReducer';\nimport dialogsReducer from './dialogsReducer';\nimport sateBarReducer from './sateBarReducer';\nimport usersReducer from './usersReducer';\nimport authReducer from './authReducer';\nimport thunkMiddleware from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport appReducer from './appReducer';\n\n\n\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: usersReducer,\n    sateBar: sateBarReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nexport default store;","import React from 'react';\nimport Preloarder from '../components/common/Preloarder/Preloader';\n\n\n\nexport const withSuspense = (Component) => {\n\n    return (props) => {\n        return <React.Suspense fallback={<Preloarder />}>\n            <Component {...props} />\n        </React.Suspense>\n    }\n}\n\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\nimport UsersConteiners from './components/Users/UsersConteiners';\nimport HeaderConteiner from './components/Header/HeaderConteiner';\nimport LoginPage from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { initializeApp } from './redux/appReducer';\nimport Preloarder from './components/common/Preloarder/Preloader';\nimport store from './redux/reduxStore';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { withSuspense } from './hoc/withSuspense';\n\n\nconst DialogsConteiner = React.lazy(() => import('./components/Dialogs/DialogsConteiners'));\nconst ProfileConteiners = React.lazy(() => import('./components/Profile/ProfileConteiners'));\n\n\nclass App extends React.Component {\n\n  catchAllUnhandledErrors = (promiseRejectionEvent) => {\n    alert(\"Some error occured\")\n  }\n\n  componentDidMount() {\n    this.props.initializeApp();\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n  }\n\n  componentWillMount() {\n    window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n  }\n\n  render() {\n\n    if (!this.props.initialized) {\n      return <Preloarder />\n    }\n\n    return (\n      <div className='app-wrapper' >\n        <HeaderConteiner />\n        <Navbar />\n        <div className='app-wrapper-contenet'>\n          <Switch>\n            <Route exact path='/' render={() => <Redirect to={'/profile/'} />} />\n            <Route path='/profile/:userId?' render={withSuspense(ProfileConteiners)} />\n            <Route path='/dialogs' render={withSuspense(DialogsConteiner)} />\n            <Route path='/users' render={() => <UsersConteiners />} />\n            <Route path='/login' render={() => <LoginPage />} />\n            <Route path='/news' component={News} />\n            <Route path='/music' component={Music} />\n            <Route path='/settings' component={Settings} />\n            <Route path='/*' render={() => <div>404 NOT FOUND</div>} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nconst AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp }))(App);\n\nconst SamuraiJSApp = (props) => {\n  return <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </BrowserRouter >\n}\n\nexport default SamuraiJSApp;\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SamuraiJSApp from './App';\nimport './index.css';\n\n\n\n\nReactDOM.render(\n\n    <SamuraiJSApp />, document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport preloarder from '../../../assets/images/Cube-1s-200px.svg';\n\nlet Preloarder = (props) => {\n    return <img src={preloarder} alt='' />\n}\n\nexport default Preloarder;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSymmaryError\":\"FormsControls_formSymmaryError__1gNig\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","export const required = value => {\n    if (value) return undefined;\n    return \"Field is required\";\n}\nexport const maxLenghtCreator = (maxlenght) => (value) => {\n\n    if (value.length > maxlenght) {\n        return `Max lenght is ${maxlenght} symbols`;\n    } else {\n        return undefined;\n    }\n}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import { profileAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\n\nconst ADD_POST = 'ADD_POST';\nconst SET_USERS_PROFILE = 'SET_USERS_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\n\nlet initialState = {\n\n    posts: [\n        { id: 1, message: 'Hi, How are you?', likecount: 15 },\n        { id: 2, message: 'Hi, How are you?', likecount: 18 },\n        { id: 3, message: 'Hi, How are you?', likecount: 17 },\n        { id: 4, message: 'It is my first post', likecount: 20 },\n\n    ],\n\n    profile: null,\n    status: ''\n}\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5,\n                message: action.newPostText,\n                likecount: 0\n            };\n            return {\n                ...state,\n                newPostText: '',\n                posts: [...state.posts, newPost]\n            };\n        }\n\n        case SET_USERS_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            };\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            };\n        }\n        case DELETE_POST: {\n            return { ...state, posts: state.posts.filter(n => n.id !== action.postId) }\n        }\n        case SAVE_PHOTO_SUCCESS: {\n            debugger;\n            return { ...state, profile: { ...state.profile, photos: action.photos } }\n        }\n\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = (newPostText) => {\n    return { type: ADD_POST, newPostText }\n}\n\nexport const setUserProfile = (profile) => ({ type: SET_USERS_PROFILE, profile })\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos })\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    const response = await profileAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n}\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n}\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status);\n\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n}\nexport const savePhoto = (file) => async (dispatch) => {\n    let response = await profileAPI.savePhoto(file);\n\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos));\n    }\n}\nexport const saveProfile = (profile) => async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    let response = await profileAPI.saveProfile(profile);\n    debugger;\n    if (response.data.resultCode === 0) {\n        dispatch(getUserProfile(userId));\n    } else {\n        debugger;\n        dispatch(stopSubmit(\"edit-profile\", { _error: response.data.messages[0] }));\n        return Promise.reject(response.data.messages[0])\n    }\n}\n\nexport default profileReducer;\n"],"sourceRoot":""}